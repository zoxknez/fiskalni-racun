# ============================================
# Docker Compose Configuration
# Fiskalni Raƒçun - Full Stack Setup
# ============================================

version: '3.8'

services:
  # ============================================
  # Main Application
  # ============================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
        - VITE_SENTRY_DSN=${VITE_SENTRY_DSN}
    container_name: fiskalni-app
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.fiskalni.app=main"
      - "com.fiskalni.environment=production"

  # ============================================
  # Redis (for caching - optional)
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: fiskalni-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "com.fiskalni.service=cache"

  # ============================================
  # Nginx Reverse Proxy (for production)
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: fiskalni-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "com.fiskalni.service=proxy"

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  nginx-logs:
    driver: local

